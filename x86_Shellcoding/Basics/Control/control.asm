; Program: Control Instructions
; 	 Covers basic jmp instr  
;
; Credit:
; 	Author:  Vivek Ramachandran
; 	Website:  http://securitytube.net
;
; Comments by: Martin Perina


global _start			

section .text
_start:

	jmp Begin ; Jump to Begin

NeverExecute: ; This is skipped/never executed

	mov eax, 0x10
	xor ebx, ebx

Begin:
	mov eax, 0x5 ; store 5 in eax, print message 5 times

PrintHW:

	push eax ; push eax onto stack
		
	; Print hello world using write syscall
	mov eax, 0x4 ; syscall write
	mov ebx, 1 ; 
	mov ecx, message ; load message
	mov edx, mlen ; load length of message
	int 0x80 ; call syscall

	pop eax ; pop eax from stack
	dec eax ; -1 from eax
	jnz PrintHW ; jump if not 0


	; exit
	mov eax, 0x1
	mov ebx, 0xa		; sys_exit syscall
	int 0x80

section .data

	message: db "Hello World! "
	mlen     equ $-message


